//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProjectManagerModel", "FK_UserIssueAssignment", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerLibrary.Models.User), "IssueAssignments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerLibrary.Models.IssueAssignment), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerModel", "FK_UserIssueAttachment", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerLibrary.Models.User), "IssueAttachments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerLibrary.Models.IssueAttachment), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerModel", "FK_ProjectIssue", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerLibrary.Models.Project), "Issues", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerLibrary.Models.Issue), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerModel", "FK_ProjectCategoryProject", "ProjectCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectManagerLibrary.Models.ProjectCategory), "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerLibrary.Models.Project), true)]

#endregion

namespace ProjectManagerLibrary.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProjectManagerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProjectManagerEntities object using the connection string found in the 'ProjectManagerEntities' section of the application configuration file.
        /// </summary>
        public ProjectManagerEntities() : base("name=ProjectManagerEntities", "ProjectManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectManagerEntities object.
        /// </summary>
        public ProjectManagerEntities(string connectionString) : base(connectionString, "ProjectManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectManagerEntities object.
        /// </summary>
        public ProjectManagerEntities(EntityConnection connection) : base(connection, "ProjectManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueAssignment> IssueAssignments
        {
            get
            {
                if ((_IssueAssignments == null))
                {
                    _IssueAssignments = base.CreateObjectSet<IssueAssignment>("IssueAssignments");
                }
                return _IssueAssignments;
            }
        }
        private ObjectSet<IssueAssignment> _IssueAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueAttachment> IssueAttachments
        {
            get
            {
                if ((_IssueAttachments == null))
                {
                    _IssueAttachments = base.CreateObjectSet<IssueAttachment>("IssueAttachments");
                }
                return _IssueAttachments;
            }
        }
        private ObjectSet<IssueAttachment> _IssueAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueCategory> IssueCategories
        {
            get
            {
                if ((_IssueCategories == null))
                {
                    _IssueCategories = base.CreateObjectSet<IssueCategory>("IssueCategories");
                }
                return _IssueCategories;
            }
        }
        private ObjectSet<IssueCategory> _IssueCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issue> Issues
        {
            get
            {
                if ((_Issues == null))
                {
                    _Issues = base.CreateObjectSet<Issue>("Issues");
                }
                return _Issues;
            }
        }
        private ObjectSet<Issue> _Issues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCategory> ProjectCategories
        {
            get
            {
                if ((_ProjectCategories == null))
                {
                    _ProjectCategories = base.CreateObjectSet<ProjectCategory>("ProjectCategories");
                }
                return _ProjectCategories;
            }
        }
        private ObjectSet<ProjectCategory> _ProjectCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueAssignments(IssueAssignment issueAssignment)
        {
            base.AddObject("IssueAssignments", issueAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueAttachments(IssueAttachment issueAttachment)
        {
            base.AddObject("IssueAttachments", issueAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueCategories(IssueCategory issueCategory)
        {
            base.AddObject("IssueCategories", issueCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssues(Issue issue)
        {
            base.AddObject("Issues", issue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCategories(ProjectCategory projectCategory)
        {
            base.AddObject("ProjectCategories", projectCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="Issue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issue object.
        /// </summary>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static Issue CreateIssue(global::System.Int32 issueID, global::System.String subject, global::System.String description, global::System.Int32 projectID)
        {
            Issue issue = new Issue();
            issue.IssueID = issueID;
            issue.Subject = subject;
            issue.Description = description;
            issue.ProjectID = projectID;
            return issue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                if (_IssueID != value)
                {
                    OnIssueIDChanging(value);
                    ReportPropertyChanging("IssueID");
                    _IssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueID");
                    OnIssueIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                if (_Subject != value)
                {
                    OnSubjectChanging(value);
                    ReportPropertyChanging("Subject");
                    _Subject = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Subject");
                    OnSubjectChanged();
                }
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                if (_Description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _Description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueCategoryName
        {
            get
            {
                return _IssueCategoryName;
            }
            set
            {
                OnIssueCategoryNameChanging(value);
                ReportPropertyChanging("IssueCategoryName");
                _IssueCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueCategoryName");
                OnIssueCategoryNameChanged();
            }
        }
        private global::System.String _IssueCategoryName;
        partial void OnIssueCategoryNameChanging(global::System.String value);
        partial void OnIssueCategoryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_ProjectIssue", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagerModel.FK_ProjectIssue", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagerModel.FK_ProjectIssue", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagerModel.FK_ProjectIssue", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectManagerModel.FK_ProjectIssue", "Projects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="IssueAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueAssignment object.
        /// </summary>
        /// <param name="issueAssignmentID">Initial value of the IssueAssignmentID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static IssueAssignment CreateIssueAssignment(global::System.Int32 issueAssignmentID, global::System.Int32 issueID, global::System.Int32 userID)
        {
            IssueAssignment issueAssignment = new IssueAssignment();
            issueAssignment.IssueAssignmentID = issueAssignmentID;
            issueAssignment.IssueID = issueID;
            issueAssignment.UserID = userID;
            return issueAssignment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueAssignmentID
        {
            get
            {
                return _IssueAssignmentID;
            }
            set
            {
                if (_IssueAssignmentID != value)
                {
                    OnIssueAssignmentIDChanging(value);
                    ReportPropertyChanging("IssueAssignmentID");
                    _IssueAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueAssignmentID");
                    OnIssueAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueAssignmentID;
        partial void OnIssueAssignmentIDChanging(global::System.Int32 value);
        partial void OnIssueAssignmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_UserIssueAssignment", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ProjectManagerModel.FK_UserIssueAssignment", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ProjectManagerModel.FK_UserIssueAssignment", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ProjectManagerModel.FK_UserIssueAssignment", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ProjectManagerModel.FK_UserIssueAssignment", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="IssueAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueAttachment object.
        /// </summary>
        /// <param name="issueAttachmentID">Initial value of the IssueAttachmentID property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        public static IssueAttachment CreateIssueAttachment(global::System.Int32 issueAttachmentID, global::System.String filename, global::System.DateTime entryDate, global::System.Int32 userID, global::System.Int32 issueID, global::System.String mimeType)
        {
            IssueAttachment issueAttachment = new IssueAttachment();
            issueAttachment.IssueAttachmentID = issueAttachmentID;
            issueAttachment.Filename = filename;
            issueAttachment.EntryDate = entryDate;
            issueAttachment.UserID = userID;
            issueAttachment.IssueID = issueID;
            issueAttachment.MimeType = mimeType;
            return issueAttachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueAttachmentID
        {
            get
            {
                return _IssueAttachmentID;
            }
            set
            {
                if (_IssueAttachmentID != value)
                {
                    OnIssueAttachmentIDChanging(value);
                    ReportPropertyChanging("IssueAttachmentID");
                    _IssueAttachmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueAttachmentID");
                    OnIssueAttachmentIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueAttachmentID;
        partial void OnIssueAttachmentIDChanging(global::System.Int32 value);
        partial void OnIssueAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_UserIssueAttachment", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ProjectManagerModel.FK_UserIssueAttachment", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ProjectManagerModel.FK_UserIssueAttachment", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ProjectManagerModel.FK_UserIssueAttachment", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ProjectManagerModel.FK_UserIssueAttachment", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="IssueCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueCategory object.
        /// </summary>
        /// <param name="issueCategoryName">Initial value of the IssueCategoryName property.</param>
        public static IssueCategory CreateIssueCategory(global::System.String issueCategoryName)
        {
            IssueCategory issueCategory = new IssueCategory();
            issueCategory.IssueCategoryName = issueCategoryName;
            return issueCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueCategoryName
        {
            get
            {
                return _IssueCategoryName;
            }
            set
            {
                if (_IssueCategoryName != value)
                {
                    OnIssueCategoryNameChanging(value);
                    ReportPropertyChanging("IssueCategoryName");
                    _IssueCategoryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IssueCategoryName");
                    OnIssueCategoryNameChanged();
                }
            }
        }
        private global::System.String _IssueCategoryName;
        partial void OnIssueCategoryNameChanging(global::System.String value);
        partial void OnIssueCategoryNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Project CreateProject(global::System.Int32 projectID, global::System.String name)
        {
            Project project = new Project();
            project.ProjectID = projectID;
            project.Name = name;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectCategoryID
        {
            get
            {
                return _ProjectCategoryID;
            }
            set
            {
                OnProjectCategoryIDChanging(value);
                ReportPropertyChanging("ProjectCategoryID");
                _ProjectCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectCategoryID");
                OnProjectCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectCategoryID;
        partial void OnProjectCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_ProjectIssue", "Issues")]
        public EntityCollection<Issue> Issues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("ProjectManagerModel.FK_ProjectIssue", "Issues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("ProjectManagerModel.FK_ProjectIssue", "Issues", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_ProjectCategoryProject", "ProjectCategories")]
        public ProjectCategory ProjectCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategory>("ProjectManagerModel.FK_ProjectCategoryProject", "ProjectCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategory>("ProjectManagerModel.FK_ProjectCategoryProject", "ProjectCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCategory> ProjectCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategory>("ProjectManagerModel.FK_ProjectCategoryProject", "ProjectCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCategory>("ProjectManagerModel.FK_ProjectCategoryProject", "ProjectCategories", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="ProjectCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCategory object.
        /// </summary>
        /// <param name="projectCategoryID">Initial value of the ProjectCategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProjectCategory CreateProjectCategory(global::System.Int32 projectCategoryID, global::System.String name)
        {
            ProjectCategory projectCategory = new ProjectCategory();
            projectCategory.ProjectCategoryID = projectCategoryID;
            projectCategory.Name = name;
            return projectCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCategoryID
        {
            get
            {
                return _ProjectCategoryID;
            }
            set
            {
                if (_ProjectCategoryID != value)
                {
                    OnProjectCategoryIDChanging(value);
                    ReportPropertyChanging("ProjectCategoryID");
                    _ProjectCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectCategoryID");
                    OnProjectCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCategoryID;
        partial void OnProjectCategoryIDChanging(global::System.Int32 value);
        partial void OnProjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_ProjectCategoryProject", "Projects")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectManagerModel.FK_ProjectCategoryProject", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectManagerModel.FK_ProjectCategoryProject", "Projects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        public static Team CreateTeam(global::System.String teamName)
        {
            Team team = new Team();
            team.TeamName = teamName;
            return team;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                if (_TeamName != value)
                {
                    OnTeamNameChanging(value);
                    ReportPropertyChanging("TeamName");
                    _TeamName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TeamName");
                    OnTeamNameChanged();
                }
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="userRole">Initial value of the UserRole property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName, global::System.String password, global::System.String userRole, global::System.String firstName, global::System.String lastName)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.Password = password;
            user.UserRole = userRole;
            user.FirstName = firstName;
            user.LastName = lastName;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserRole
        {
            get
            {
                return _UserRole;
            }
            set
            {
                OnUserRoleChanging(value);
                ReportPropertyChanging("UserRole");
                _UserRole = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserRole");
                OnUserRoleChanged();
            }
        }
        private global::System.String _UserRole;
        partial void OnUserRoleChanging(global::System.String value);
        partial void OnUserRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_UserIssueAssignment", "IssueAssignments")]
        public EntityCollection<IssueAssignment> IssueAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAssignment>("ProjectManagerModel.FK_UserIssueAssignment", "IssueAssignments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAssignment>("ProjectManagerModel.FK_UserIssueAssignment", "IssueAssignments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerModel", "FK_UserIssueAttachment", "IssueAttachments")]
        public EntityCollection<IssueAttachment> IssueAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAttachment>("ProjectManagerModel.FK_UserIssueAttachment", "IssueAttachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAttachment>("ProjectManagerModel.FK_UserIssueAttachment", "IssueAttachments", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
