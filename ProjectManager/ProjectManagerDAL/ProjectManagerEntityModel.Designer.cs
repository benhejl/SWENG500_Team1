//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProjectManagerDAL", "FK_UserIssueAssignment", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerDAL.UserDAL), "IssueAssignments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerDAL.IssueAssignmentDAL), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerDAL", "FK_UserIssueAttachment", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerDAL.UserDAL), "IssueAttachments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerDAL.IssueAttachmentDAL), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerDAL", "FK_ProjectCategoryProject", "ProjectCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectManagerDAL.ProjectCategoryDAL), "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerDAL.ProjectDAL), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerDAL", "FK_IssueAssignments_Issues", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerDAL.IssueDAL), "IssueAssignmentDAL", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerDAL.IssueAssignmentDAL), true)]
[assembly: EdmRelationshipAttribute("ProjectManagerDAL", "FK_ProjectIssue", "ProjectDAL", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectManagerDAL.ProjectDAL), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagerDAL.IssueDAL), true)]

#endregion

namespace ProjectManagerDAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProjectManagerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProjectManagerEntities object using the connection string found in the 'ProjectManagerEntities' section of the application configuration file.
        /// </summary>
        public ProjectManagerEntities() : base("name=ProjectManagerEntities", "ProjectManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectManagerEntities object.
        /// </summary>
        public ProjectManagerEntities(string connectionString) : base(connectionString, "ProjectManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectManagerEntities object.
        /// </summary>
        public ProjectManagerEntities(EntityConnection connection) : base(connection, "ProjectManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueAssignmentDAL> IssueAssignmentDALs
        {
            get
            {
                if ((_IssueAssignmentDALs == null))
                {
                    _IssueAssignmentDALs = base.CreateObjectSet<IssueAssignmentDAL>("IssueAssignmentDALs");
                }
                return _IssueAssignmentDALs;
            }
        }
        private ObjectSet<IssueAssignmentDAL> _IssueAssignmentDALs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueAttachmentDAL> IssueAttachmentDALs
        {
            get
            {
                if ((_IssueAttachmentDALs == null))
                {
                    _IssueAttachmentDALs = base.CreateObjectSet<IssueAttachmentDAL>("IssueAttachmentDALs");
                }
                return _IssueAttachmentDALs;
            }
        }
        private ObjectSet<IssueAttachmentDAL> _IssueAttachmentDALs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueCategoryDAL> IssueCategoryDALs
        {
            get
            {
                if ((_IssueCategoryDALs == null))
                {
                    _IssueCategoryDALs = base.CreateObjectSet<IssueCategoryDAL>("IssueCategoryDALs");
                }
                return _IssueCategoryDALs;
            }
        }
        private ObjectSet<IssueCategoryDAL> _IssueCategoryDALs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCategoryDAL> ProjectCategoryDALs
        {
            get
            {
                if ((_ProjectCategoryDALs == null))
                {
                    _ProjectCategoryDALs = base.CreateObjectSet<ProjectCategoryDAL>("ProjectCategoryDALs");
                }
                return _ProjectCategoryDALs;
            }
        }
        private ObjectSet<ProjectCategoryDAL> _ProjectCategoryDALs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectDAL> ProjectDALs
        {
            get
            {
                if ((_ProjectDALs == null))
                {
                    _ProjectDALs = base.CreateObjectSet<ProjectDAL>("ProjectDALs");
                }
                return _ProjectDALs;
            }
        }
        private ObjectSet<ProjectDAL> _ProjectDALs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScrumQuestion> ScrumQuestions
        {
            get
            {
                if ((_ScrumQuestions == null))
                {
                    _ScrumQuestions = base.CreateObjectSet<ScrumQuestion>("ScrumQuestions");
                }
                return _ScrumQuestions;
            }
        }
        private ObjectSet<ScrumQuestion> _ScrumQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDAL> UserDALs
        {
            get
            {
                if ((_UserDALs == null))
                {
                    _UserDALs = base.CreateObjectSet<UserDAL>("UserDALs");
                }
                return _UserDALs;
            }
        }
        private ObjectSet<UserDAL> _UserDALs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueDAL> IssueDALs
        {
            get
            {
                if ((_IssueDALs == null))
                {
                    _IssueDALs = base.CreateObjectSet<IssueDAL>("IssueDALs");
                }
                return _IssueDALs;
            }
        }
        private ObjectSet<IssueDAL> _IssueDALs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueAssignmentDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueAssignmentDALs(IssueAssignmentDAL issueAssignmentDAL)
        {
            base.AddObject("IssueAssignmentDALs", issueAssignmentDAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueAttachmentDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueAttachmentDALs(IssueAttachmentDAL issueAttachmentDAL)
        {
            base.AddObject("IssueAttachmentDALs", issueAttachmentDAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueCategoryDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueCategoryDALs(IssueCategoryDAL issueCategoryDAL)
        {
            base.AddObject("IssueCategoryDALs", issueCategoryDAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCategoryDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCategoryDALs(ProjectCategoryDAL projectCategoryDAL)
        {
            base.AddObject("ProjectCategoryDALs", projectCategoryDAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectDALs(ProjectDAL projectDAL)
        {
            base.AddObject("ProjectDALs", projectDAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScrumQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScrumQuestions(ScrumQuestion scrumQuestion)
        {
            base.AddObject("ScrumQuestions", scrumQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDALs(UserDAL userDAL)
        {
            base.AddObject("UserDALs", userDAL);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueDALs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueDALs(IssueDAL issueDAL)
        {
            base.AddObject("IssueDALs", issueDAL);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="IssueAssignmentDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueAssignmentDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueAssignmentDAL object.
        /// </summary>
        /// <param name="issueAssignmentID">Initial value of the IssueAssignmentID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static IssueAssignmentDAL CreateIssueAssignmentDAL(global::System.Int32 issueAssignmentID, global::System.Int32 issueID, global::System.Int32 userID)
        {
            IssueAssignmentDAL issueAssignmentDAL = new IssueAssignmentDAL();
            issueAssignmentDAL.IssueAssignmentID = issueAssignmentID;
            issueAssignmentDAL.IssueID = issueID;
            issueAssignmentDAL.UserID = userID;
            return issueAssignmentDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueAssignmentID
        {
            get
            {
                return _IssueAssignmentID;
            }
            set
            {
                if (_IssueAssignmentID != value)
                {
                    OnIssueAssignmentIDChanging(value);
                    ReportPropertyChanging("IssueAssignmentID");
                    _IssueAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueAssignmentID");
                    OnIssueAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueAssignmentID;
        partial void OnIssueAssignmentIDChanging(global::System.Int32 value);
        partial void OnIssueAssignmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_UserIssueAssignment", "Users")]
        public UserDAL User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAssignment", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAssignment", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserDAL> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAssignment", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAssignment", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_IssueAssignments_Issues", "Issue")]
        public IssueDAL Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDAL>("ProjectManagerDAL.FK_IssueAssignments_Issues", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDAL>("ProjectManagerDAL.FK_IssueAssignments_Issues", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueDAL> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDAL>("ProjectManagerDAL.FK_IssueAssignments_Issues", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueDAL>("ProjectManagerDAL.FK_IssueAssignments_Issues", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="IssueAttachmentDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueAttachmentDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueAttachmentDAL object.
        /// </summary>
        /// <param name="issueAttachmentID">Initial value of the IssueAttachmentID property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        public static IssueAttachmentDAL CreateIssueAttachmentDAL(global::System.Int32 issueAttachmentID, global::System.String filename, global::System.DateTime entryDate, global::System.Int32 userID, global::System.Int32 issueID, global::System.String mimeType)
        {
            IssueAttachmentDAL issueAttachmentDAL = new IssueAttachmentDAL();
            issueAttachmentDAL.IssueAttachmentID = issueAttachmentID;
            issueAttachmentDAL.Filename = filename;
            issueAttachmentDAL.EntryDate = entryDate;
            issueAttachmentDAL.UserID = userID;
            issueAttachmentDAL.IssueID = issueID;
            issueAttachmentDAL.MimeType = mimeType;
            return issueAttachmentDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueAttachmentID
        {
            get
            {
                return _IssueAttachmentID;
            }
            set
            {
                if (_IssueAttachmentID != value)
                {
                    OnIssueAttachmentIDChanging(value);
                    ReportPropertyChanging("IssueAttachmentID");
                    _IssueAttachmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueAttachmentID");
                    OnIssueAttachmentIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueAttachmentID;
        partial void OnIssueAttachmentIDChanging(global::System.Int32 value);
        partial void OnIssueAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_UserIssueAttachment", "Users")]
        public UserDAL User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAttachment", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAttachment", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserDAL> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAttachment", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserDAL>("ProjectManagerDAL.FK_UserIssueAttachment", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="IssueCategoryDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueCategoryDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueCategoryDAL object.
        /// </summary>
        /// <param name="issueCategoryName">Initial value of the IssueCategoryName property.</param>
        public static IssueCategoryDAL CreateIssueCategoryDAL(global::System.String issueCategoryName)
        {
            IssueCategoryDAL issueCategoryDAL = new IssueCategoryDAL();
            issueCategoryDAL.IssueCategoryName = issueCategoryName;
            return issueCategoryDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueCategoryName
        {
            get
            {
                return _IssueCategoryName;
            }
            set
            {
                if (_IssueCategoryName != value)
                {
                    OnIssueCategoryNameChanging(value);
                    ReportPropertyChanging("IssueCategoryName");
                    _IssueCategoryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IssueCategoryName");
                    OnIssueCategoryNameChanged();
                }
            }
        }
        private global::System.String _IssueCategoryName;
        partial void OnIssueCategoryNameChanging(global::System.String value);
        partial void OnIssueCategoryNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="IssueDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueDAL object.
        /// </summary>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static IssueDAL CreateIssueDAL(global::System.Int32 issueID, global::System.String subject, global::System.String description, global::System.Int32 projectID)
        {
            IssueDAL issueDAL = new IssueDAL();
            issueDAL.IssueID = issueID;
            issueDAL.Subject = subject;
            issueDAL.Description = description;
            issueDAL.ProjectID = projectID;
            return issueDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                if (_IssueID != value)
                {
                    OnIssueIDChanging(value);
                    ReportPropertyChanging("IssueID");
                    _IssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueID");
                    OnIssueIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueCategoryName
        {
            get
            {
                return _IssueCategoryName;
            }
            set
            {
                OnIssueCategoryNameChanging(value);
                ReportPropertyChanging("IssueCategoryName");
                _IssueCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueCategoryName");
                OnIssueCategoryNameChanged();
            }
        }
        private global::System.String _IssueCategoryName;
        partial void OnIssueCategoryNameChanging(global::System.String value);
        partial void OnIssueCategoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_IssueAssignments_Issues", "IssueAssignmentDAL")]
        public EntityCollection<IssueAssignmentDAL> IssueAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAssignmentDAL>("ProjectManagerDAL.FK_IssueAssignments_Issues", "IssueAssignmentDAL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAssignmentDAL>("ProjectManagerDAL.FK_IssueAssignments_Issues", "IssueAssignmentDAL", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_ProjectIssue", "ProjectDAL")]
        public ProjectDAL Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDAL>("ProjectManagerDAL.FK_ProjectIssue", "ProjectDAL").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDAL>("ProjectManagerDAL.FK_ProjectIssue", "ProjectDAL").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectDAL> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDAL>("ProjectManagerDAL.FK_ProjectIssue", "ProjectDAL");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectDAL>("ProjectManagerDAL.FK_ProjectIssue", "ProjectDAL", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="ProjectCategoryDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCategoryDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCategoryDAL object.
        /// </summary>
        /// <param name="projectCategoryID">Initial value of the ProjectCategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProjectCategoryDAL CreateProjectCategoryDAL(global::System.Int32 projectCategoryID, global::System.String name)
        {
            ProjectCategoryDAL projectCategoryDAL = new ProjectCategoryDAL();
            projectCategoryDAL.ProjectCategoryID = projectCategoryID;
            projectCategoryDAL.Name = name;
            return projectCategoryDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCategoryID
        {
            get
            {
                return _ProjectCategoryID;
            }
            set
            {
                if (_ProjectCategoryID != value)
                {
                    OnProjectCategoryIDChanging(value);
                    ReportPropertyChanging("ProjectCategoryID");
                    _ProjectCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectCategoryID");
                    OnProjectCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCategoryID;
        partial void OnProjectCategoryIDChanging(global::System.Int32 value);
        partial void OnProjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_ProjectCategoryProject", "Projects")]
        public EntityCollection<ProjectDAL> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDAL>("ProjectManagerDAL.FK_ProjectCategoryProject", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDAL>("ProjectManagerDAL.FK_ProjectCategoryProject", "Projects", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="ProjectDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectDAL object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProjectDAL CreateProjectDAL(global::System.Int32 projectID, global::System.String name)
        {
            ProjectDAL projectDAL = new ProjectDAL();
            projectDAL.ProjectID = projectID;
            projectDAL.Name = name;
            return projectDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectCategoryID
        {
            get
            {
                return _ProjectCategoryID;
            }
            set
            {
                OnProjectCategoryIDChanging(value);
                ReportPropertyChanging("ProjectCategoryID");
                _ProjectCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectCategoryID");
                OnProjectCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectCategoryID;
        partial void OnProjectCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_ProjectCategoryProject", "ProjectCategories")]
        public ProjectCategoryDAL ProjectCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategoryDAL>("ProjectManagerDAL.FK_ProjectCategoryProject", "ProjectCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategoryDAL>("ProjectManagerDAL.FK_ProjectCategoryProject", "ProjectCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCategoryDAL> ProjectCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategoryDAL>("ProjectManagerDAL.FK_ProjectCategoryProject", "ProjectCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCategoryDAL>("ProjectManagerDAL.FK_ProjectCategoryProject", "ProjectCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_ProjectIssue", "Issue")]
        public EntityCollection<IssueDAL> Issues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDAL>("ProjectManagerDAL.FK_ProjectIssue", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDAL>("ProjectManagerDAL.FK_ProjectIssue", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="ScrumQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScrumQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScrumQuestion object.
        /// </summary>
        /// <param name="scrumQuestionId">Initial value of the ScrumQuestionId property.</param>
        /// <param name="scrumQuestion1">Initial value of the ScrumQuestion1 property.</param>
        public static ScrumQuestion CreateScrumQuestion(global::System.Int32 scrumQuestionId, global::System.String scrumQuestion1)
        {
            ScrumQuestion scrumQuestion = new ScrumQuestion();
            scrumQuestion.ScrumQuestionId = scrumQuestionId;
            scrumQuestion.ScrumQuestion1 = scrumQuestion1;
            return scrumQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrumQuestionId
        {
            get
            {
                return _ScrumQuestionId;
            }
            set
            {
                if (_ScrumQuestionId != value)
                {
                    OnScrumQuestionIdChanging(value);
                    ReportPropertyChanging("ScrumQuestionId");
                    _ScrumQuestionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScrumQuestionId");
                    OnScrumQuestionIdChanged();
                }
            }
        }
        private global::System.Int32 _ScrumQuestionId;
        partial void OnScrumQuestionIdChanging(global::System.Int32 value);
        partial void OnScrumQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScrumQuestion1
        {
            get
            {
                return _ScrumQuestion1;
            }
            set
            {
                OnScrumQuestion1Changing(value);
                ReportPropertyChanging("ScrumQuestion1");
                _ScrumQuestion1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScrumQuestion1");
                OnScrumQuestion1Changed();
            }
        }
        private global::System.String _ScrumQuestion1;
        partial void OnScrumQuestion1Changing(global::System.String value);
        partial void OnScrumQuestion1Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        public static Team CreateTeam(global::System.Int32 teamId, global::System.String teamName)
        {
            Team team = new Team();
            team.TeamId = teamId;
            team.TeamName = teamName;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                if (_TeamId != value)
                {
                    OnTeamIdChanging(value);
                    ReportPropertyChanging("TeamId");
                    _TeamId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamId");
                    OnTeamIdChanged();
                }
            }
        }
        private global::System.Int32 _TeamId;
        partial void OnTeamIdChanging(global::System.Int32 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamDescription
        {
            get
            {
                return _TeamDescription;
            }
            set
            {
                OnTeamDescriptionChanging(value);
                ReportPropertyChanging("TeamDescription");
                _TeamDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamDescription");
                OnTeamDescriptionChanged();
            }
        }
        private global::System.String _TeamDescription;
        partial void OnTeamDescriptionChanging(global::System.String value);
        partial void OnTeamDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagerDAL", Name="UserDAL")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDAL : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserDAL object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="userRole">Initial value of the UserRole property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static UserDAL CreateUserDAL(global::System.Int32 userID, global::System.String userName, global::System.String password, global::System.String userRole, global::System.String firstName, global::System.String lastName)
        {
            UserDAL userDAL = new UserDAL();
            userDAL.UserID = userID;
            userDAL.UserName = userName;
            userDAL.Password = password;
            userDAL.UserRole = userRole;
            userDAL.FirstName = firstName;
            userDAL.LastName = lastName;
            return userDAL;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserRole
        {
            get
            {
                return _UserRole;
            }
            set
            {
                OnUserRoleChanging(value);
                ReportPropertyChanging("UserRole");
                _UserRole = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserRole");
                OnUserRoleChanged();
            }
        }
        private global::System.String _UserRole;
        partial void OnUserRoleChanging(global::System.String value);
        partial void OnUserRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_UserIssueAssignment", "IssueAssignments")]
        public EntityCollection<IssueAssignmentDAL> IssueAssignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAssignmentDAL>("ProjectManagerDAL.FK_UserIssueAssignment", "IssueAssignments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAssignmentDAL>("ProjectManagerDAL.FK_UserIssueAssignment", "IssueAssignments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagerDAL", "FK_UserIssueAttachment", "IssueAttachments")]
        public EntityCollection<IssueAttachmentDAL> IssueAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAttachmentDAL>("ProjectManagerDAL.FK_UserIssueAttachment", "IssueAttachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAttachmentDAL>("ProjectManagerDAL.FK_UserIssueAttachment", "IssueAttachments", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
